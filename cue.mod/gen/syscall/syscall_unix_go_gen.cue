// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go syscall

package syscall

_#darwin64Bit: true
_#netbsd32Bit: false

// An Errno is an unsigned number describing an error condition.
// It implements the error interface. The zero Errno is by convention
// a non-error, so code to convert from Errno to error should use:
//
//	err = nil
//	if errno != 0 {
//		err = errno
//	}
//
// Errno values can be tested against error values from the os package
// using errors.Is. For example:
//
//	_, _, err := syscall.Syscall(...)
//	if errors.Is(err, fs.ErrNotExist) ...
#Errno: uint64 // #enumErrno

#enumErrno:
	#E2BIG |
	#EACCES |
	#EADDRINUSE |
	#EADDRNOTAVAIL |
	#EAFNOSUPPORT |
	#EAGAIN |
	#EALREADY |
	#EAUTH |
	#EBADARCH |
	#EBADEXEC |
	#EBADF |
	#EBADMACHO |
	#EBADMSG |
	#EBADRPC |
	#EBUSY |
	#ECANCELED |
	#ECHILD |
	#ECONNABORTED |
	#ECONNREFUSED |
	#ECONNRESET |
	#EDEADLK |
	#EDESTADDRREQ |
	#EDEVERR |
	#EDOM |
	#EDQUOT |
	#EEXIST |
	#EFAULT |
	#EFBIG |
	#EFTYPE |
	#EHOSTDOWN |
	#EHOSTUNREACH |
	#EIDRM |
	#EILSEQ |
	#EINPROGRESS |
	#EINTR |
	#EINVAL |
	#EIO |
	#EISCONN |
	#EISDIR |
	#ELAST |
	#ELOOP |
	#EMFILE |
	#EMLINK |
	#EMSGSIZE |
	#EMULTIHOP |
	#ENAMETOOLONG |
	#ENEEDAUTH |
	#ENETDOWN |
	#ENETRESET |
	#ENETUNREACH |
	#ENFILE |
	#ENOATTR |
	#ENOBUFS |
	#ENODATA |
	#ENODEV |
	#ENOENT |
	#ENOEXEC |
	#ENOLCK |
	#ENOLINK |
	#ENOMEM |
	#ENOMSG |
	#ENOPOLICY |
	#ENOPROTOOPT |
	#ENOSPC |
	#ENOSR |
	#ENOSTR |
	#ENOSYS |
	#ENOTBLK |
	#ENOTCONN |
	#ENOTDIR |
	#ENOTEMPTY |
	#ENOTRECOVERABLE |
	#ENOTSOCK |
	#ENOTSUP |
	#ENOTTY |
	#ENXIO |
	#EOPNOTSUPP |
	#EOVERFLOW |
	#EOWNERDEAD |
	#EPERM |
	#EPFNOSUPPORT |
	#EPIPE |
	#EPROCLIM |
	#EPROCUNAVAIL |
	#EPROGMISMATCH |
	#EPROGUNAVAIL |
	#EPROTO |
	#EPROTONOSUPPORT |
	#EPROTOTYPE |
	#EPWROFF |
	#ERANGE |
	#EREMOTE |
	#EROFS |
	#ERPCMISMATCH |
	#ESHLIBVERS |
	#ESHUTDOWN |
	#ESOCKTNOSUPPORT |
	#ESPIPE |
	#ESRCH |
	#ESTALE |
	#ETIME |
	#ETIMEDOUT |
	#ETOOMANYREFS |
	#ETXTBSY |
	#EUSERS |
	#EWOULDBLOCK |
	#EXDEV

#values_Errno: {
	E2BIG:           #E2BIG
	EACCES:          #EACCES
	EADDRINUSE:      #EADDRINUSE
	EADDRNOTAVAIL:   #EADDRNOTAVAIL
	EAFNOSUPPORT:    #EAFNOSUPPORT
	EAGAIN:          #EAGAIN
	EALREADY:        #EALREADY
	EAUTH:           #EAUTH
	EBADARCH:        #EBADARCH
	EBADEXEC:        #EBADEXEC
	EBADF:           #EBADF
	EBADMACHO:       #EBADMACHO
	EBADMSG:         #EBADMSG
	EBADRPC:         #EBADRPC
	EBUSY:           #EBUSY
	ECANCELED:       #ECANCELED
	ECHILD:          #ECHILD
	ECONNABORTED:    #ECONNABORTED
	ECONNREFUSED:    #ECONNREFUSED
	ECONNRESET:      #ECONNRESET
	EDEADLK:         #EDEADLK
	EDESTADDRREQ:    #EDESTADDRREQ
	EDEVERR:         #EDEVERR
	EDOM:            #EDOM
	EDQUOT:          #EDQUOT
	EEXIST:          #EEXIST
	EFAULT:          #EFAULT
	EFBIG:           #EFBIG
	EFTYPE:          #EFTYPE
	EHOSTDOWN:       #EHOSTDOWN
	EHOSTUNREACH:    #EHOSTUNREACH
	EIDRM:           #EIDRM
	EILSEQ:          #EILSEQ
	EINPROGRESS:     #EINPROGRESS
	EINTR:           #EINTR
	EINVAL:          #EINVAL
	EIO:             #EIO
	EISCONN:         #EISCONN
	EISDIR:          #EISDIR
	ELAST:           #ELAST
	ELOOP:           #ELOOP
	EMFILE:          #EMFILE
	EMLINK:          #EMLINK
	EMSGSIZE:        #EMSGSIZE
	EMULTIHOP:       #EMULTIHOP
	ENAMETOOLONG:    #ENAMETOOLONG
	ENEEDAUTH:       #ENEEDAUTH
	ENETDOWN:        #ENETDOWN
	ENETRESET:       #ENETRESET
	ENETUNREACH:     #ENETUNREACH
	ENFILE:          #ENFILE
	ENOATTR:         #ENOATTR
	ENOBUFS:         #ENOBUFS
	ENODATA:         #ENODATA
	ENODEV:          #ENODEV
	ENOENT:          #ENOENT
	ENOEXEC:         #ENOEXEC
	ENOLCK:          #ENOLCK
	ENOLINK:         #ENOLINK
	ENOMEM:          #ENOMEM
	ENOMSG:          #ENOMSG
	ENOPOLICY:       #ENOPOLICY
	ENOPROTOOPT:     #ENOPROTOOPT
	ENOSPC:          #ENOSPC
	ENOSR:           #ENOSR
	ENOSTR:          #ENOSTR
	ENOSYS:          #ENOSYS
	ENOTBLK:         #ENOTBLK
	ENOTCONN:        #ENOTCONN
	ENOTDIR:         #ENOTDIR
	ENOTEMPTY:       #ENOTEMPTY
	ENOTRECOVERABLE: #ENOTRECOVERABLE
	ENOTSOCK:        #ENOTSOCK
	ENOTSUP:         #ENOTSUP
	ENOTTY:          #ENOTTY
	ENXIO:           #ENXIO
	EOPNOTSUPP:      #EOPNOTSUPP
	EOVERFLOW:       #EOVERFLOW
	EOWNERDEAD:      #EOWNERDEAD
	EPERM:           #EPERM
	EPFNOSUPPORT:    #EPFNOSUPPORT
	EPIPE:           #EPIPE
	EPROCLIM:        #EPROCLIM
	EPROCUNAVAIL:    #EPROCUNAVAIL
	EPROGMISMATCH:   #EPROGMISMATCH
	EPROGUNAVAIL:    #EPROGUNAVAIL
	EPROTO:          #EPROTO
	EPROTONOSUPPORT: #EPROTONOSUPPORT
	EPROTOTYPE:      #EPROTOTYPE
	EPWROFF:         #EPWROFF
	ERANGE:          #ERANGE
	EREMOTE:         #EREMOTE
	EROFS:           #EROFS
	ERPCMISMATCH:    #ERPCMISMATCH
	ESHLIBVERS:      #ESHLIBVERS
	ESHUTDOWN:       #ESHUTDOWN
	ESOCKTNOSUPPORT: #ESOCKTNOSUPPORT
	ESPIPE:          #ESPIPE
	ESRCH:           #ESRCH
	ESTALE:          #ESTALE
	ETIME:           #ETIME
	ETIMEDOUT:       #ETIMEDOUT
	ETOOMANYREFS:    #ETOOMANYREFS
	ETXTBSY:         #ETXTBSY
	EUSERS:          #EUSERS
	EWOULDBLOCK:     #EWOULDBLOCK
	EXDEV:           #EXDEV
}

// A Signal is a number describing a process signal.
// It implements the os.Signal interface.
#Signal: int // #enumSignal

#enumSignal:
	#SIGABRT |
	#SIGALRM |
	#SIGBUS |
	#SIGCHLD |
	#SIGCONT |
	#SIGEMT |
	#SIGFPE |
	#SIGHUP |
	#SIGILL |
	#SIGINFO |
	#SIGINT |
	#SIGIO |
	#SIGIOT |
	#SIGKILL |
	#SIGPIPE |
	#SIGPROF |
	#SIGQUIT |
	#SIGSEGV |
	#SIGSTOP |
	#SIGSYS |
	#SIGTERM |
	#SIGTRAP |
	#SIGTSTP |
	#SIGTTIN |
	#SIGTTOU |
	#SIGURG |
	#SIGUSR1 |
	#SIGUSR2 |
	#SIGVTALRM |
	#SIGWINCH |
	#SIGXCPU |
	#SIGXFSZ

#values_Signal: {
	SIGABRT:   #SIGABRT
	SIGALRM:   #SIGALRM
	SIGBUS:    #SIGBUS
	SIGCHLD:   #SIGCHLD
	SIGCONT:   #SIGCONT
	SIGEMT:    #SIGEMT
	SIGFPE:    #SIGFPE
	SIGHUP:    #SIGHUP
	SIGILL:    #SIGILL
	SIGINFO:   #SIGINFO
	SIGINT:    #SIGINT
	SIGIO:     #SIGIO
	SIGIOT:    #SIGIOT
	SIGKILL:   #SIGKILL
	SIGPIPE:   #SIGPIPE
	SIGPROF:   #SIGPROF
	SIGQUIT:   #SIGQUIT
	SIGSEGV:   #SIGSEGV
	SIGSTOP:   #SIGSTOP
	SIGSYS:    #SIGSYS
	SIGTERM:   #SIGTERM
	SIGTRAP:   #SIGTRAP
	SIGTSTP:   #SIGTSTP
	SIGTTIN:   #SIGTTIN
	SIGTTOU:   #SIGTTOU
	SIGURG:    #SIGURG
	SIGUSR1:   #SIGUSR1
	SIGUSR2:   #SIGUSR2
	SIGVTALRM: #SIGVTALRM
	SIGWINCH:  #SIGWINCH
	SIGXCPU:   #SIGXCPU
	SIGXFSZ:   #SIGXFSZ
}

#Sockaddr: _

#SockaddrInet4: {
	Port: int
	Addr: bytes @go(,[4]byte)
}

#SockaddrInet6: {
	Port:   int
	ZoneId: uint32
	Addr:   bytes @go(,[16]byte)
}

#SockaddrUnix: Name: string
