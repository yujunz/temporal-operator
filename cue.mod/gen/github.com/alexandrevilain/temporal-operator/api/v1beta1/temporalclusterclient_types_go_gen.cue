// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/alexandrevilain/temporal-operator/api/v1beta1

package v1beta1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TemporalClusterClientSpec defines the desired state of ClusterClient.
#TemporalClusterClientSpec: {
	// Reference to the temporal cluster the client will get access to.
	clusterRef: #TemporalClusterReference @go(ClusterRef)
}

// TemporalClusterClientStatus defines the observed state of ClusterClient.
#TemporalClusterClientStatus: {
	// ServerName is the hostname returned by the certificate.
	serverName: string @go(ServerName)

	// Reference to the Kubernetes Secret containing the certificate for the client.
	secretRef?: null | corev1.#LocalObjectReference @go(SecretRef,*corev1.LocalObjectReference)
}

// A TemporalClusterClient creates a new mTLS client in the targeted temporal cluster.
#TemporalClusterClient: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta           @go(ObjectMeta)
	spec?:     #TemporalClusterClientSpec   @go(Spec)
	status?:   #TemporalClusterClientStatus @go(Status)
}

// TemporalClusterClientList contains a list of ClusterClient.
#TemporalClusterClientList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TemporalClusterClient] @go(Items,[]TemporalClusterClient)
}
