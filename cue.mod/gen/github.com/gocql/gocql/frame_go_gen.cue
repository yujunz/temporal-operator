// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/gocql/gocql

package gocql

import "time"

_#unsetColumn: {
}

_#protoDirectionMask: 0x80
_#protoVersionMask:   0x7F
_#protoVersion1:      0x01
_#protoVersion2:      0x02
_#protoVersion3:      0x03
_#protoVersion4:      0x04
_#protoVersion5:      0x05
_#maxFrameSize:       268435456

_#protoVersion: uint8

_#frameOp: uint8

// header ops
_#opError:         _#frameOp & 0x00
_#opStartup:       _#frameOp & 0x01
_#opReady:         _#frameOp & 0x02
_#opAuthenticate:  _#frameOp & 0x03
_#opOptions:       _#frameOp & 0x05
_#opSupported:     _#frameOp & 0x06
_#opQuery:         _#frameOp & 0x07
_#opResult:        _#frameOp & 0x08
_#opPrepare:       _#frameOp & 0x09
_#opExecute:       _#frameOp & 0x0A
_#opRegister:      _#frameOp & 0x0B
_#opEvent:         _#frameOp & 0x0C
_#opBatch:         _#frameOp & 0x0D
_#opAuthChallenge: _#frameOp & 0x0E
_#opAuthResponse:  _#frameOp & 0x0F
_#opAuthSuccess:   _#frameOp & 0x10

// result kind
_#resultKindVoid:          1
_#resultKindRows:          2
_#resultKindKeyspace:      3
_#resultKindPrepared:      4
_#resultKindSchemaChanged: 5

// rows flags
_#flagGlobalTableSpec: int & 0x01
_#flagHasMorePages:    int & 0x02
_#flagNoMetaData:      int & 0x04

// query flags
_#flagValues:                0x01
_#flagSkipMetaData:          0x02
_#flagPageSize:              0x04
_#flagWithPagingState:       0x08
_#flagWithSerialConsistency: 0x10
_#flagDefaultTimestamp:      0x20
_#flagWithNameValues:        0x40
_#flagWithKeyspace:          0x80

// prepare flags
_#flagWithPreparedKeyspace: uint32 & 0x01

// header flags
_#flagCompress:      0x01
_#flagTracing:       0x02
_#flagCustomPayload: 0x04
_#flagWarning:       0x08
_#flagBetaProtocol:  0x10

#Consistency: string // #enumConsistency

#enumConsistency:
	#Any |
	#One |
	#Two |
	#Three |
	#Quorum |
	#All |
	#LocalQuorum |
	#EachQuorum |
	#LocalOne

#values_Consistency: {
	Any:         #Any
	One:         #One
	Two:         #Two
	Three:       #Three
	Quorum:      #Quorum
	All:         #All
	LocalQuorum: #LocalQuorum
	EachQuorum:  #EachQuorum
	LocalOne:    #LocalOne
}

#Any:         #Consistency & 0x00
#One:         #Consistency & 0x01
#Two:         #Consistency & 0x02
#Three:       #Consistency & 0x03
#Quorum:      #Consistency & 0x04
#All:         #Consistency & 0x05
#LocalQuorum: #Consistency & 0x06
#EachQuorum:  #Consistency & 0x07
#LocalOne:    #Consistency & 0x0A

#SerialConsistency: string // #enumSerialConsistency

#enumSerialConsistency:
	#Serial |
	#LocalSerial

#values_SerialConsistency: {
	Serial:      #Serial
	LocalSerial: #LocalSerial
}

#Serial:      #SerialConsistency & 0x08
#LocalSerial: #SerialConsistency & 0x09

_#apacheCassandraTypePrefix: "org.apache.cassandra.db.marshal."

_#maxFrameHeaderSize: 9

_#defaultBufSize: 128

#ObservedFrameHeader: {
	Version: _#protoVersion
	Flags:   uint8 @go(,byte)
	Stream:  int16
	Opcode:  _#frameOp
	Length:  int32

	// StartHeader is the time we started reading the frame header off the network connection.
	Start: time.Time

	// EndHeader is the time we finished reading the frame header off the network connection.
	End: time.Time
}

// FrameHeaderObserver is the interface implemented by frame observers / stat collectors.
//
// Experimental, this interface and use may change
#FrameHeaderObserver: _

_#frame: _

_#frameBuilder: _

_#writeOptionsFrame: {
}
