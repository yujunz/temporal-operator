// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/gocql/gocql

package gocql

// Marshaler is the interface implemented by objects that can marshal
// themselves into values understood by Cassandra.
#Marshaler: _

// Unmarshaler is the interface implemented by objects that can unmarshal
// a Cassandra specific description of themselves.
#Unmarshaler: _

_#millisecondsInADay: int64 & 86400000

// UDTMarshaler is an interface which should be implemented by users wishing to
// handle encoding UDT types to sent to Cassandra. Note: due to current implentations
// methods defined for this interface must be value receivers not pointer receivers.
#UDTMarshaler: _

// UDTUnmarshaler should be implemented by users wanting to implement custom
// UDT unmarshaling.
#UDTUnmarshaler: _

// TypeInfo describes a Cassandra specific data type.
#TypeInfo: _

#CollectionType: {
	Key:  #TypeInfo
	Elem: #TypeInfo
}

#TupleTypeInfo: {
	Elems: [...#TypeInfo] @go(,[]TypeInfo)
}

#UDTField: {
	Name: string
	Type: #TypeInfo
}

#UDTTypeInfo: {
	KeySpace: string
	Name:     string
	Elements: [...#UDTField] @go(,[]UDTField)
}

// String returns a human readable name for the Cassandra datatype
// described by t.
// Type is the identifier of a Cassandra internal datatype.
#Type: int // #enumType

#enumType:
	#TypeCustom |
	#TypeAscii |
	#TypeBigInt |
	#TypeBlob |
	#TypeBoolean |
	#TypeCounter |
	#TypeDecimal |
	#TypeDouble |
	#TypeFloat |
	#TypeInt |
	#TypeText |
	#TypeTimestamp |
	#TypeUUID |
	#TypeVarchar |
	#TypeVarint |
	#TypeTimeUUID |
	#TypeInet |
	#TypeDate |
	#TypeTime |
	#TypeSmallInt |
	#TypeTinyInt |
	#TypeDuration |
	#TypeList |
	#TypeMap |
	#TypeSet |
	#TypeUDT |
	#TypeTuple

#values_Type: {
	TypeCustom:    #TypeCustom
	TypeAscii:     #TypeAscii
	TypeBigInt:    #TypeBigInt
	TypeBlob:      #TypeBlob
	TypeBoolean:   #TypeBoolean
	TypeCounter:   #TypeCounter
	TypeDecimal:   #TypeDecimal
	TypeDouble:    #TypeDouble
	TypeFloat:     #TypeFloat
	TypeInt:       #TypeInt
	TypeText:      #TypeText
	TypeTimestamp: #TypeTimestamp
	TypeUUID:      #TypeUUID
	TypeVarchar:   #TypeVarchar
	TypeVarint:    #TypeVarint
	TypeTimeUUID:  #TypeTimeUUID
	TypeInet:      #TypeInet
	TypeDate:      #TypeDate
	TypeTime:      #TypeTime
	TypeSmallInt:  #TypeSmallInt
	TypeTinyInt:   #TypeTinyInt
	TypeDuration:  #TypeDuration
	TypeList:      #TypeList
	TypeMap:       #TypeMap
	TypeSet:       #TypeSet
	TypeUDT:       #TypeUDT
	TypeTuple:     #TypeTuple
}

#TypeCustom:    #Type & 0x0000
#TypeAscii:     #Type & 0x0001
#TypeBigInt:    #Type & 0x0002
#TypeBlob:      #Type & 0x0003
#TypeBoolean:   #Type & 0x0004
#TypeCounter:   #Type & 0x0005
#TypeDecimal:   #Type & 0x0006
#TypeDouble:    #Type & 0x0007
#TypeFloat:     #Type & 0x0008
#TypeInt:       #Type & 0x0009
#TypeText:      #Type & 0x000A
#TypeTimestamp: #Type & 0x000B
#TypeUUID:      #Type & 0x000C
#TypeVarchar:   #Type & 0x000D
#TypeVarint:    #Type & 0x000E
#TypeTimeUUID:  #Type & 0x000F
#TypeInet:      #Type & 0x0010
#TypeDate:      #Type & 0x0011
#TypeTime:      #Type & 0x0012
#TypeSmallInt:  #Type & 0x0013
#TypeTinyInt:   #Type & 0x0014
#TypeDuration:  #Type & 0x0015
#TypeList:      #Type & 0x0020
#TypeMap:       #Type & 0x0021
#TypeSet:       #Type & 0x0022
#TypeUDT:       #Type & 0x0030
#TypeTuple:     #Type & 0x0031

#MarshalError: string

#UnmarshalError: string
